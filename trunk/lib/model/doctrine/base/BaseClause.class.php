<?php

/**
 * BaseClause
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $document_id
 * @property integer $clause_body_id
 * @property string $clause_number_information
 * @property string $clause_number_subparagraph
 * @property clob $private_comment
 * @property string $slug
 * @property Document $Document
 * @property ClauseBody $ClauseBody
 * @property Doctrine_Collection $ClauseClauseRelation
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method integer             getDocumentId()                 Returns the current record's "document_id" value
 * @method integer             getClauseBodyId()               Returns the current record's "clause_body_id" value
 * @method string              getClauseNumberInformation()    Returns the current record's "clause_number_information" value
 * @method string              getClauseNumberSubparagraph()   Returns the current record's "clause_number_subparagraph" value
 * @method clob                getPrivateComment()             Returns the current record's "private_comment" value
 * @method string              getSlug()                       Returns the current record's "slug" value
 * @method Document            getDocument()                   Returns the current record's "Document" value
 * @method ClauseBody          getClauseBody()                 Returns the current record's "ClauseBody" value
 * @method Doctrine_Collection getClauseClauseRelation()       Returns the current record's "ClauseClauseRelation" collection
 * @method Clause              setId()                         Sets the current record's "id" value
 * @method Clause              setDocumentId()                 Sets the current record's "document_id" value
 * @method Clause              setClauseBodyId()               Sets the current record's "clause_body_id" value
 * @method Clause              setClauseNumberInformation()    Sets the current record's "clause_number_information" value
 * @method Clause              setClauseNumberSubparagraph()   Sets the current record's "clause_number_subparagraph" value
 * @method Clause              setPrivateComment()             Sets the current record's "private_comment" value
 * @method Clause              setSlug()                       Sets the current record's "slug" value
 * @method Clause              setDocument()                   Sets the current record's "Document" value
 * @method Clause              setClauseBody()                 Sets the current record's "ClauseBody" value
 * @method Clause              setClauseClauseRelation()       Sets the current record's "ClauseClauseRelation" collection
 * 
 * @package    uninformed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseClause extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clause');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('document_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('clause_body_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('clause_number_information', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('clause_number_subparagraph', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('private_comment', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));


        $this->index('mapping', array(
             'fields' => 
             array(
              0 => 'document_id',
              1 => 'clause_body_id',
             ),
             'type' => 'unique',
             ));
        $this->option('collation', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id'));

        $this->hasOne('ClauseBody', array(
             'local' => 'clause_body_id',
             'foreign' => 'id'));

        $this->hasMany('ClauseClauseRelation', array(
             'local' => 'id',
             'foreign' => 'clause_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $blameable0 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              'options' => 
              array(
               'notnull' => false,
              ),
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $versionable0 = new Doctrine_Template_Versionable(array(
             ));
        $blameable1 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              'options' => 
              array(
               'notnull' => false,
              ),
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $versionable0->addChild($blameable1);
        $this->actAs($timestampable0);
        $this->actAs($blameable0);
        $this->actAs($versionable0);
    }
}