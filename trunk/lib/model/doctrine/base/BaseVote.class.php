<?php

/**
 * BaseVote
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property enum $type
 * @property datetime $vote_date
 * @property integer $document_id
 * @property integer $country_id
 * @property Document $Document
 * @property Country $Country
 * 
 * @method integer  getId()          Returns the current record's "id" value
 * @method enum     getType()        Returns the current record's "type" value
 * @method datetime getVoteDate()    Returns the current record's "vote_date" value
 * @method integer  getDocumentId()  Returns the current record's "document_id" value
 * @method integer  getCountryId()   Returns the current record's "country_id" value
 * @method Document getDocument()    Returns the current record's "Document" value
 * @method Country  getCountry()     Returns the current record's "Country" value
 * @method Vote     setId()          Sets the current record's "id" value
 * @method Vote     setType()        Sets the current record's "type" value
 * @method Vote     setVoteDate()    Sets the current record's "vote_date" value
 * @method Vote     setDocumentId()  Sets the current record's "document_id" value
 * @method Vote     setCountryId()   Sets the current record's "country_id" value
 * @method Vote     setDocument()    Sets the current record's "Document" value
 * @method Vote     setCountry()     Sets the current record's "Country" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVote extends MyBaseRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vote');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'adopted without a vote',
              1 => 'yes',
              2 => 'no',
              3 => 'abstention',
              4 => 'not present',
              5 => 'signed',
              6 => 'ratified',
             ),
             ));
        $this->hasColumn('vote_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('document_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('mapping', array(
             'fields' => 
             array(
              0 => 'document_id',
              1 => 'country_id',
             ),
             'type' => 'unique',
             ));
        $this->option('collation', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id'));

        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $blameable0 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              'options' => 
              array(
               'notnull' => false,
              ),
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($blameable0);
    }
}