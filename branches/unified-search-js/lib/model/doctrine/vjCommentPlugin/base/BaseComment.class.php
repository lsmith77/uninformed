<?php

/**
 * BaseComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $record_model
 * @property integer $user_id
 * @property integer $record_id
 * @property string $author_name
 * @property string $author_email
 * @property string $author_website
 * @property clob $body
 * @property boolean $is_delete
 * @property clob $edition_reason
 * @property integer $reply
 * @property Comment $Comment
 * @property sfGuardUser $User
 * @property Doctrine_Collection $CommentReport
 * 
 * @method string              getRecordModel()    Returns the current record's "record_model" value
 * @method integer             getUserId()         Returns the current record's "user_id" value
 * @method integer             getRecordId()       Returns the current record's "record_id" value
 * @method string              getAuthorName()     Returns the current record's "author_name" value
 * @method string              getAuthorEmail()    Returns the current record's "author_email" value
 * @method string              getAuthorWebsite()  Returns the current record's "author_website" value
 * @method clob                getBody()           Returns the current record's "body" value
 * @method boolean             getIsDelete()       Returns the current record's "is_delete" value
 * @method clob                getEditionReason()  Returns the current record's "edition_reason" value
 * @method integer             getReply()          Returns the current record's "reply" value
 * @method Comment             getComment()        Returns the current record's "Comment" value
 * @method sfGuardUser         getUser()           Returns the current record's "User" value
 * @method Doctrine_Collection getCommentReport()  Returns the current record's "CommentReport" collection
 * @method Comment             setRecordModel()    Sets the current record's "record_model" value
 * @method Comment             setUserId()         Sets the current record's "user_id" value
 * @method Comment             setRecordId()       Sets the current record's "record_id" value
 * @method Comment             setAuthorName()     Sets the current record's "author_name" value
 * @method Comment             setAuthorEmail()    Sets the current record's "author_email" value
 * @method Comment             setAuthorWebsite()  Sets the current record's "author_website" value
 * @method Comment             setBody()           Sets the current record's "body" value
 * @method Comment             setIsDelete()       Sets the current record's "is_delete" value
 * @method Comment             setEditionReason()  Sets the current record's "edition_reason" value
 * @method Comment             setReply()          Sets the current record's "reply" value
 * @method Comment             setComment()        Sets the current record's "Comment" value
 * @method Comment             setUser()           Sets the current record's "User" value
 * @method Comment             setCommentReport()  Sets the current record's "CommentReport" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseComment extends MyBaseRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('comment');
        $this->hasColumn('record_model', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 4,
             ));
        $this->hasColumn('record_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('author_email', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('author_website', 'string', 255, array(
             'type' => 'string',
             'extra' => 'link',
             'length' => 255,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
        $this->hasColumn('is_delete', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('edition_reason', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('reply', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Comment', array(
             'local' => 'reply',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasMany('CommentReport', array(
             'local' => 'id',
             'foreign' => 'id_comment'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}