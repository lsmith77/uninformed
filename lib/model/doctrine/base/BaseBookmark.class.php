<?php

/**
 * BaseBookmark
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $object_type
 * @property integer $object_id
 * 
 * @method integer  getId()          Returns the current record's "id" value
 * @method integer  getUserId()      Returns the current record's "user_id" value
 * @method integer  getObjectType()  Returns the current record's "object_type" value
 * @method integer  getObjectId()    Returns the current record's "object_id" value
 * @method Bookmark setId()          Sets the current record's "id" value
 * @method Bookmark setUserId()      Sets the current record's "user_id" value
 * @method Bookmark setObjectType()  Sets the current record's "object_type" value
 * @method Bookmark setObjectId()    Sets the current record's "object_id" value
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBookmark extends MyBaseRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bookmark');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('object_type', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('object_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));


        $this->index('mapping', array(
             'fields' => 
             array(
              0 => 'user_id',
              1 => 'object_type',
              2 => 'object_id',
             ),
             'type' => 'unique',
             ));
        $this->option('collation', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}