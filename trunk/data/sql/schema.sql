CREATE TABLE addressee_version (id INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE addressee (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_version (id INT, document_id INT NOT NULL, clause_body_id INT NOT NULL, clause_number INT NOT NULL, clause_number_information VARCHAR(255), clause_number_subparagraph VARCHAR(255), private_comment LONGTEXT, slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause (id INT AUTO_INCREMENT, document_id INT NOT NULL, clause_body_id INT NOT NULL, clause_number INT NOT NULL, clause_number_information VARCHAR(255), clause_number_subparagraph VARCHAR(255), private_comment LONGTEXT, slug VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, clause_body_id), INDEX document_id_idx (document_id), INDEX clause_body_id_idx (clause_body_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_addressee_version (id INT, clause_body_id INT NOT NULL, addressee_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_addressee (id INT AUTO_INCREMENT, clause_body_id INT NOT NULL, addressee_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (clause_body_id, addressee_id), INDEX author_id_idx (author_id), INDEX addressee_id_idx (addressee_id), INDEX clause_body_id_idx (clause_body_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_body_version (id INT, content LONGTEXT, information_type_id INT, operative_phrase_id INT, clause_process_id INT, public_comment LONGTEXT, parent_clause_body_id INT, root_clause_body_id INT, is_latest_clause_body TINYINT(1) DEFAULT '1', status VARCHAR(255) DEFAULT 'draft' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_body (id INT AUTO_INCREMENT, content LONGTEXT, information_type_id INT, operative_phrase_id INT, clause_process_id INT, public_comment LONGTEXT, parent_clause_body_id INT, root_clause_body_id INT, is_latest_clause_body TINYINT(1) DEFAULT '1', status VARCHAR(255) DEFAULT 'draft' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX root_clause_body_id_idx (root_clause_body_id), INDEX parent_clause_body_id_idx (parent_clause_body_id), INDEX clause_process_id_idx (clause_process_id), INDEX information_type_id_idx (information_type_id), INDEX operative_phrase_id_idx (operative_phrase_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_body_tag_version (id INT, clause_body_id INT NOT NULL, tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_body_tag (id INT AUTO_INCREMENT, clause_body_id INT NOT NULL, tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (clause_body_id, tag_id), INDEX author_id_idx (author_id), INDEX clause_body_id_idx (clause_body_id), INDEX tag_id_idx (tag_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_clause_relation_version (id INT, type VARCHAR(255) NOT NULL, clause_id INT NOT NULL, related_clause_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_clause_relation (id INT AUTO_INCREMENT, type VARCHAR(255) NOT NULL, clause_id INT NOT NULL, related_clause_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (clause_id, related_clause_id, type), INDEX clause_id_idx (clause_id), INDEX related_clause_id_idx (related_clause_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_information_type_version (id INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_information_type (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_operative_phrase_version (id INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_operative_phrase (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_process_version (id INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_process (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_reservation_version (id INT, clause_body_id INT, country_id INT, reservation LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE clause_reservation (id INT AUTO_INCREMENT, clause_body_id INT, country_id INT, reservation LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (clause_body_id, country_id), INDEX clause_body_id_idx (clause_body_id), INDEX country_id_idx (country_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE country_version (id INT, iso VARCHAR(3) NOT NULL, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE country (id INT AUTO_INCREMENT, iso VARCHAR(3) NOT NULL, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE country_organisation_version (id INT, country_id INT NOT NULL, organisation_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE country_organisation (id INT AUTO_INCREMENT, country_id INT NOT NULL, organisation_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, eff_date DATE NOT NULL, exp_date DATE, INDEX country_id_idx (country_id), INDEX organisation_id_idx (organisation_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_version (id INT, name VARCHAR(255) NOT NULL, slug VARCHAR(255), enforcement_date DATE, adoption_date DATE NOT NULL, code VARCHAR(255), min_ratification_count INT, is_ratified bool, vote_url VARCHAR(255), private_comment LONGTEXT, public_comment LONGTEXT, parent_document_id INT, root_document_id INT, organisation_id INT, documenttype_id INT, document_url VARCHAR(255), clause_ordering VARCHAR(255), status VARCHAR(255) DEFAULT 'draft' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, slug VARCHAR(255), enforcement_date DATE, adoption_date DATE NOT NULL, code VARCHAR(255), min_ratification_count INT, is_ratified bool, vote_url VARCHAR(255), private_comment LONGTEXT, public_comment LONGTEXT, parent_document_id INT, root_document_id INT, organisation_id INT, documenttype_id INT, document_url VARCHAR(255), clause_ordering VARCHAR(255), status VARCHAR(255) DEFAULT 'draft' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX parent_document_id_idx (parent_document_id), INDEX organisation_id_idx (organisation_id), INDEX documenttype_id_idx (documenttype_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_clause_relation_version (id INT, document_id INT NOT NULL, related_clause_body_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_clause_relation (id INT AUTO_INCREMENT, document_id INT NOT NULL, related_clause_body_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, related_clause_body_id), INDEX document_id_idx (document_id), INDEX related_clause_body_id_idx (related_clause_body_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_document_relation_version (id INT, type VARCHAR(255) NOT NULL, document_id INT NOT NULL, related_document_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_document_relation (id INT AUTO_INCREMENT, type VARCHAR(255) NOT NULL, document_id INT NOT NULL, related_document_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, related_document_id, type), INDEX document_id_idx (document_id), INDEX related_document_id_idx (related_document_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_reservation_version (id INT, document_id INT, country_id INT, reservation LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_reservation (id INT AUTO_INCREMENT, document_id INT, country_id INT, reservation LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, country_id), INDEX document_id_idx (document_id), INDEX country_id_idx (country_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_tag_version (id INT, document_id INT NOT NULL, tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_tag (id INT AUTO_INCREMENT, document_id INT NOT NULL, tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, tag_id), INDEX author_id_idx (author_id), INDEX document_id_idx (document_id), INDEX tag_id_idx (tag_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_type_version (id INT, name VARCHAR(255) NOT NULL, legalvalue_id INT, rank_priority INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE document_type (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, legalvalue_id INT, rank_priority INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX legalvalue_id_idx (legalvalue_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE excel_file_version (id INT, name VARCHAR(255) NOT NULL, file VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE excel_file (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, file VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), excel_file_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, author_id INT, INDEX is_active_idx_idx (is_active), INDEX excel_file_id_idx (excel_file_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE legal_value_version (id INT, name VARCHAR(255) NOT NULL, decision_type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE legal_value (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, decision_type VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE organisation_version (id INT, name VARCHAR(255) NOT NULL, slug VARCHAR(255), parent_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE organisation (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, slug VARCHAR(255), parent_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX parent_id_idx (parent_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE tag_version (id INT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE tag (id INT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX name_idx (name), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE tag_implication_version (id INT, implication_type VARCHAR(255) NOT NULL, tag_id INT NOT NULL, implied_tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE tag_implication (id INT AUTO_INCREMENT, implication_type VARCHAR(255) NOT NULL, tag_id INT NOT NULL, implied_tag_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (tag_id, implied_tag_id), INDEX tag_id_idx (tag_id), INDEX implied_tag_id_idx (implied_tag_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE vote_version (id INT, type VARCHAR(255), vote_date datetime, document_id INT NOT NULL, country_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE vote (id INT AUTO_INCREMENT, type VARCHAR(255), vote_date datetime, document_id INT NOT NULL, country_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, UNIQUE INDEX mapping_idx (document_id, country_id), INDEX document_id_idx (document_id), INDEX country_id_idx (country_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, type VARCHAR(255), excel_file_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, author_id INT, INDEX is_active_idx_idx (is_active), INDEX sf_guard_user_type_idx (type), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user_profile_version (id INT, user_id INT NOT NULL, email VARCHAR(80), fullname VARCHAR(80), validate VARCHAR(17), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX author_id_idx (author_id), PRIMARY KEY(id, version)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
CREATE TABLE sf_guard_user_profile (id INT AUTO_INCREMENT, user_id INT NOT NULL, email VARCHAR(80), fullname VARCHAR(80), validate VARCHAR(17), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, author_id INT, version BIGINT, INDEX user_id_idx (user_id), INDEX author_id_idx (author_id), PRIMARY KEY(id)) DEFAULT CHARACTER SET utf8 ENGINE = InnoDB;
ALTER TABLE addressee_version ADD CONSTRAINT addressee_version_id_addressee_id FOREIGN KEY (id) REFERENCES addressee(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE addressee_version ADD CONSTRAINT addressee_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE addressee ADD CONSTRAINT addressee_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_version ADD CONSTRAINT clause_version_id_clause_id FOREIGN KEY (id) REFERENCES clause(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_version ADD CONSTRAINT clause_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause ADD CONSTRAINT clause_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE clause ADD CONSTRAINT clause_clause_body_id_clause_body_id FOREIGN KEY (clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause ADD CONSTRAINT clause_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_addressee_version ADD CONSTRAINT clause_addressee_version_id_clause_addressee_id FOREIGN KEY (id) REFERENCES clause_addressee(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_addressee_version ADD CONSTRAINT clause_addressee_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_addressee ADD CONSTRAINT clause_addressee_clause_body_id_clause_body_id FOREIGN KEY (clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause_addressee ADD CONSTRAINT clause_addressee_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_addressee ADD CONSTRAINT clause_addressee_addressee_id_addressee_id FOREIGN KEY (addressee_id) REFERENCES addressee(id);
ALTER TABLE clause_body_version ADD CONSTRAINT clause_body_version_id_clause_body_id FOREIGN KEY (id) REFERENCES clause_body(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_body_version ADD CONSTRAINT clause_body_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_root_clause_body_id_clause_body_id FOREIGN KEY (root_clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_parent_clause_body_id_clause_body_id FOREIGN KEY (parent_clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_operative_phrase_id_clause_operative_phrase_id FOREIGN KEY (operative_phrase_id) REFERENCES clause_operative_phrase(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_information_type_id_clause_information_type_id FOREIGN KEY (information_type_id) REFERENCES clause_information_type(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_clause_process_id_clause_process_id FOREIGN KEY (clause_process_id) REFERENCES clause_process(id);
ALTER TABLE clause_body ADD CONSTRAINT clause_body_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_body_tag_version ADD CONSTRAINT clause_body_tag_version_id_clause_body_tag_id FOREIGN KEY (id) REFERENCES clause_body_tag(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_body_tag_version ADD CONSTRAINT clause_body_tag_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_body_tag ADD CONSTRAINT clause_body_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id);
ALTER TABLE clause_body_tag ADD CONSTRAINT clause_body_tag_clause_body_id_clause_body_id FOREIGN KEY (clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause_body_tag ADD CONSTRAINT clause_body_tag_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_clause_relation_version ADD CONSTRAINT clause_clause_relation_version_id_clause_clause_relation_id FOREIGN KEY (id) REFERENCES clause_clause_relation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_clause_relation_version ADD CONSTRAINT clause_clause_relation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_clause_relation ADD CONSTRAINT clause_clause_relation_related_clause_id_clause_id FOREIGN KEY (related_clause_id) REFERENCES clause(id);
ALTER TABLE clause_clause_relation ADD CONSTRAINT clause_clause_relation_clause_id_clause_id FOREIGN KEY (clause_id) REFERENCES clause(id);
ALTER TABLE clause_clause_relation ADD CONSTRAINT clause_clause_relation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_information_type_version ADD CONSTRAINT clause_information_type_version_id_clause_information_type_id FOREIGN KEY (id) REFERENCES clause_information_type(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_information_type_version ADD CONSTRAINT clause_information_type_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_information_type ADD CONSTRAINT clause_information_type_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_operative_phrase_version ADD CONSTRAINT clause_operative_phrase_version_id_clause_operative_phrase_id FOREIGN KEY (id) REFERENCES clause_operative_phrase(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_operative_phrase_version ADD CONSTRAINT clause_operative_phrase_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_operative_phrase ADD CONSTRAINT clause_operative_phrase_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_process_version ADD CONSTRAINT clause_process_version_id_clause_process_id FOREIGN KEY (id) REFERENCES clause_process(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_process_version ADD CONSTRAINT clause_process_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_process ADD CONSTRAINT clause_process_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_reservation_version ADD CONSTRAINT clause_reservation_version_id_clause_reservation_id FOREIGN KEY (id) REFERENCES clause_reservation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE clause_reservation_version ADD CONSTRAINT clause_reservation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE clause_reservation ADD CONSTRAINT clause_reservation_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id);
ALTER TABLE clause_reservation ADD CONSTRAINT clause_reservation_clause_body_id_clause_body_id FOREIGN KEY (clause_body_id) REFERENCES clause_body(id);
ALTER TABLE clause_reservation ADD CONSTRAINT clause_reservation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE country_version ADD CONSTRAINT country_version_id_country_id FOREIGN KEY (id) REFERENCES country(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE country_version ADD CONSTRAINT country_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE country ADD CONSTRAINT country_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE country_organisation_version ADD CONSTRAINT country_organisation_version_id_country_organisation_id FOREIGN KEY (id) REFERENCES country_organisation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE country_organisation_version ADD CONSTRAINT country_organisation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE country_organisation ADD CONSTRAINT country_organisation_organisation_id_organisation_id FOREIGN KEY (organisation_id) REFERENCES organisation(id);
ALTER TABLE country_organisation ADD CONSTRAINT country_organisation_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id);
ALTER TABLE country_organisation ADD CONSTRAINT country_organisation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_version ADD CONSTRAINT document_version_id_document_id FOREIGN KEY (id) REFERENCES document(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_version ADD CONSTRAINT document_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document ADD CONSTRAINT document_parent_document_id_document_id FOREIGN KEY (parent_document_id) REFERENCES document(id);
ALTER TABLE document ADD CONSTRAINT document_organisation_id_organisation_id FOREIGN KEY (organisation_id) REFERENCES organisation(id);
ALTER TABLE document ADD CONSTRAINT document_documenttype_id_document_type_id FOREIGN KEY (documenttype_id) REFERENCES document_type(id);
ALTER TABLE document ADD CONSTRAINT document_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_clause_relation_version ADD CONSTRAINT document_clause_relation_version_id_document_clause_relation_id FOREIGN KEY (id) REFERENCES document_clause_relation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_clause_relation_version ADD CONSTRAINT document_clause_relation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_clause_relation ADD CONSTRAINT document_clause_relation_related_clause_body_id_clause_body_id FOREIGN KEY (related_clause_body_id) REFERENCES clause_body(id);
ALTER TABLE document_clause_relation ADD CONSTRAINT document_clause_relation_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE document_clause_relation ADD CONSTRAINT document_clause_relation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_document_relation_version ADD CONSTRAINT document_document_relation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_document_relation_version ADD CONSTRAINT didi_1 FOREIGN KEY (id) REFERENCES document_document_relation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_document_relation ADD CONSTRAINT document_document_relation_related_document_id_document_id FOREIGN KEY (related_document_id) REFERENCES document(id);
ALTER TABLE document_document_relation ADD CONSTRAINT document_document_relation_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE document_document_relation ADD CONSTRAINT document_document_relation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_reservation_version ADD CONSTRAINT document_reservation_version_id_document_reservation_id FOREIGN KEY (id) REFERENCES document_reservation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_reservation_version ADD CONSTRAINT document_reservation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_reservation ADD CONSTRAINT document_reservation_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE document_reservation ADD CONSTRAINT document_reservation_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id);
ALTER TABLE document_reservation ADD CONSTRAINT document_reservation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_tag_version ADD CONSTRAINT document_tag_version_id_document_tag_id FOREIGN KEY (id) REFERENCES document_tag(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_tag_version ADD CONSTRAINT document_tag_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_tag ADD CONSTRAINT document_tag_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id);
ALTER TABLE document_tag ADD CONSTRAINT document_tag_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE document_tag ADD CONSTRAINT document_tag_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_type_version ADD CONSTRAINT document_type_version_id_document_type_id FOREIGN KEY (id) REFERENCES document_type(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE document_type_version ADD CONSTRAINT document_type_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE document_type ADD CONSTRAINT document_type_legalvalue_id_legal_value_id FOREIGN KEY (legalvalue_id) REFERENCES legal_value(id);
ALTER TABLE document_type ADD CONSTRAINT document_type_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE excel_file_version ADD CONSTRAINT excel_file_version_id_excel_file_id FOREIGN KEY (id) REFERENCES excel_file(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE excel_file_version ADD CONSTRAINT excel_file_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE excel_file ADD CONSTRAINT excel_file_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user ADD CONSTRAINT sf_guard_user_excel_file_id_excel_file_id FOREIGN KEY (excel_file_id) REFERENCES excel_file(id);
ALTER TABLE sf_guard_user ADD CONSTRAINT sf_guard_user_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE legal_value_version ADD CONSTRAINT legal_value_version_id_legal_value_id FOREIGN KEY (id) REFERENCES legal_value(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE legal_value_version ADD CONSTRAINT legal_value_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE legal_value ADD CONSTRAINT legal_value_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE organisation_version ADD CONSTRAINT organisation_version_id_organisation_id FOREIGN KEY (id) REFERENCES organisation(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE organisation_version ADD CONSTRAINT organisation_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE organisation ADD CONSTRAINT organisation_parent_id_organisation_id FOREIGN KEY (parent_id) REFERENCES organisation(id);
ALTER TABLE organisation ADD CONSTRAINT organisation_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE tag_version ADD CONSTRAINT tag_version_id_tag_id FOREIGN KEY (id) REFERENCES tag(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE tag_version ADD CONSTRAINT tag_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE tag ADD CONSTRAINT tag_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE tag_implication_version ADD CONSTRAINT tag_implication_version_id_tag_implication_id FOREIGN KEY (id) REFERENCES tag_implication(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE tag_implication_version ADD CONSTRAINT tag_implication_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE tag_implication ADD CONSTRAINT tag_implication_tag_id_tag_id FOREIGN KEY (tag_id) REFERENCES tag(id);
ALTER TABLE tag_implication ADD CONSTRAINT tag_implication_implied_tag_id_tag_id FOREIGN KEY (implied_tag_id) REFERENCES tag(id);
ALTER TABLE tag_implication ADD CONSTRAINT tag_implication_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE vote_version ADD CONSTRAINT vote_version_id_vote_id FOREIGN KEY (id) REFERENCES vote(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE vote_version ADD CONSTRAINT vote_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE vote ADD CONSTRAINT vote_document_id_document_id FOREIGN KEY (document_id) REFERENCES document(id);
ALTER TABLE vote ADD CONSTRAINT vote_country_id_country_id FOREIGN KEY (country_id) REFERENCES country(id);
ALTER TABLE vote ADD CONSTRAINT vote_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile_version ADD CONSTRAINT sf_guard_user_profile_version_id_sf_guard_user_profile_id FOREIGN KEY (id) REFERENCES sf_guard_user_profile(id) ON UPDATE CASCADE ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile_version ADD CONSTRAINT sf_guard_user_profile_version_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_author_id_sf_guard_user_id FOREIGN KEY (author_id) REFERENCES sf_guard_user(id);
