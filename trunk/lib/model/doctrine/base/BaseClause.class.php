<?php

/**
 * BaseClause
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $document_id
 * @property integer $clause_body_id
 * @property integer $clause_number
 * @property string $clause_number_information
 * @property string $clause_number_subparagraph
 * @property clob $private_comment
 * @property Document $Document
 * @property ClauseBody $ClauseBody
 * 
 * @method integer    getId()                         Returns the current record's "id" value
 * @method integer    getDocumentId()                 Returns the current record's "document_id" value
 * @method integer    getClauseBodyId()               Returns the current record's "clause_body_id" value
 * @method integer    getClauseNumber()               Returns the current record's "clause_number" value
 * @method string     getClauseNumberInformation()    Returns the current record's "clause_number_information" value
 * @method string     getClauseNumberSubparagraph()   Returns the current record's "clause_number_subparagraph" value
 * @method clob       getPrivateComment()             Returns the current record's "private_comment" value
 * @method Document   getDocument()                   Returns the current record's "Document" value
 * @method ClauseBody getClauseBody()                 Returns the current record's "ClauseBody" value
 * @method Clause     setId()                         Sets the current record's "id" value
 * @method Clause     setDocumentId()                 Sets the current record's "document_id" value
 * @method Clause     setClauseBodyId()               Sets the current record's "clause_body_id" value
 * @method Clause     setClauseNumber()               Sets the current record's "clause_number" value
 * @method Clause     setClauseNumberInformation()    Sets the current record's "clause_number_information" value
 * @method Clause     setClauseNumberSubparagraph()   Sets the current record's "clause_number_subparagraph" value
 * @method Clause     setPrivateComment()             Sets the current record's "private_comment" value
 * @method Clause     setDocument()                   Sets the current record's "Document" value
 * @method Clause     setClauseBody()                 Sets the current record's "ClauseBody" value
 * 
 * @package    uninformed
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseClause extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clause');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('document_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('clause_body_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('clause_number', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '4',
             ));
        $this->hasColumn('clause_number_information', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('clause_number_subparagraph', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('private_comment', 'clob', null, array(
             'type' => 'clob',
             ));


        $this->index('mapping', array(
             'fields' => 
             array(
              0 => 'document_id',
              1 => 'clause_body_id',
             ),
             'type' => 'unique',
             ));
        $this->option('collation', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Document', array(
             'local' => 'document_id',
             'foreign' => 'id'));

        $this->hasOne('ClauseBody', array(
             'local' => 'clause_body_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $blameable0 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'user_id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $versionable0 = new Doctrine_Template_Versionable(array(
             ));
        $blameable1 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'user_id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $versionable0->addChild($blameable1);
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($blameable0);
        $this->actAs($versionable0);
        $this->actAs($sluggable0);
    }
}