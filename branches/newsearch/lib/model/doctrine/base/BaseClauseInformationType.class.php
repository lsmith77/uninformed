<?php

/**
 * BaseClauseInformationType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property clob $description
 * @property Doctrine_Collection $Clauses
 * 
 * @method integer               getId()          Returns the current record's "id" value
 * @method string                getName()        Returns the current record's "name" value
 * @method clob                  getDescription() Returns the current record's "description" value
 * @method Doctrine_Collection   getClauses()     Returns the current record's "Clauses" collection
 * @method ClauseInformationType setId()          Sets the current record's "id" value
 * @method ClauseInformationType setName()        Sets the current record's "name" value
 * @method ClauseInformationType setDescription() Sets the current record's "description" value
 * @method ClauseInformationType setClauses()     Sets the current record's "Clauses" collection
 * 
 * @package    symfony
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClauseInformationType extends MyBaseRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clause_information_type');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('collation', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ClauseBody as Clauses', array(
             'local' => 'id',
             'foreign' => 'information_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $blameable0 = new Doctrine_Template_Blameable(array(
             'default' => NULL,
             'blameVar' => 'id',
             'listener' => 'BlameableCustomListener',
             'columns' => 
             array(
              'created' => 
              array(
              'name' => 'author_id',
              'length' => 4,
              'options' => 
              array(
               'notnull' => false,
              ),
              ),
              'updated' => 
              array(
              'disabled' => true,
              ),
             ),
             'relations' => 
             array(
              'created' => 
              array(
              'class' => 'sfGuardUser',
              'disabled' => false,
              'name' => 'Author',
              ),
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($blameable0);
    }
}